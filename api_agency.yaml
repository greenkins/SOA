openapi: 3.0.0
info:
  title: Agency Service API
  description: API для взаимодействия с квартирными объектами и выполнения агентских задач
  version: 1.0.0
servers:
  - url: /api/cian/agency

paths:
  /get-cheapest/{id1}/{id2}:
    get:
      summary: Получить самую дешевую квартиру из двух
      tags:
        - agency
      description: Возвращает квартиру с минимальной стоимостью из двух указанных.
      parameters:
        - name: id1
          in: path
          required: true
          schema:
            type: integer
        - name: id2
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешная операция
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Flat'
        '404':
          description: Одна из квартир не найдена
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/NotFoundAnswer'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ServerErrorAnswer'

  /get-ordered-by-time-to-metro/{by-transport}/{desc}:
    get:
      summary: Получить отсортированный список квартир по времени до метро
      tags:
        - agency
      description: Возвращает список квартир, отсортированных по времени до метро (пешком или на транспорте) в указанном порядке (возрастание или убывание).
      parameters:
        - name: by-transport
          in: path
          required: true
          schema:
            type: boolean
          description: Если true, сортировать по времени на транспорте. Если false, сортировать по пешему времени.
        - name: desc
          in: path
          required: true
          schema:
            type: boolean
          description: Если true, сортировка будет по убыванию.
      responses:
        '200':
          description: Успешная операция
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flat'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ServerErrorAnswer'

components:
  schemas:
    CheapestFlatResponse:
      type: object
      properties:
        cheaperFlat:
          $ref: '#/components/schemas/FlatAllFields'
        message:
          type: string
          example: "Квартира с ID 1 дешевле, чем квартира с ID 2"

    OrderedByTimeToMetroResponse:
      type: object
      properties:
        flats:
          type: array
          items:
            $ref: '#/components/schemas/FlatAllFields'
        transport:
          type: string
          example: "NORMAL"
        descending:
          type: boolean
          example: false

    AgencyErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2024-10-25T00:00:00Z"
        status:
          type: integer
          example: 404
        error:
          type: string
          example: "Не найдено"
        path:
          type: string
          example: "/agency/get-cheapest/1/2"
        details:
          type: string
          example: "Квартиры с такими ID не найдены"

    BadRequestAgencyAnswer:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2024-10-25T00:00:00Z"
        status:
          type: integer
          enum:
            - 400
        error:
          type: string
          example: "Неверный запрос"
        path:
          type: string
          example: "/agency/get-ordered-by-time-to-metro"

    ServerErrorAgencyAnswer:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2024-10-25T00:00:00Z"
        status:
          type: string
          pattern: 5\d\d
          example: "500"
        error:
          type: string
          example: "Внутренняя ошибка сервера"
        path:
          type: string
          example: "/agency/get-ordered-by-time-to-metro"

